// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: movies.sql

package dbGen

import (
	"context"
	"database/sql"
)

const getMovie = `-- name: GetMovie :one
SELECT
    id, title, description, director
FROM
    Movie
WHERE
    "id" = ?
`

func (q *Queries) GetMovie(ctx context.Context, dollar_1 interface{}) (Movie, error) {
	row := q.db.QueryRowContext(ctx, getMovie, dollar_1)
	var i Movie
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Description,
		&i.Director,
	)
	return i, err
}

const insertMovie = `-- name: InsertMovie :execresult
insert into
    Movie (id, title, description, director)
values
    (?, ?, ?, ?)
`

type InsertMovieParams struct {
	ID          string
	Title       sql.NullString
	Description sql.NullString
	Director    sql.NullString
}

func (q *Queries) InsertMovie(ctx context.Context, arg InsertMovieParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, insertMovie,
		arg.ID,
		arg.Title,
		arg.Description,
		arg.Director,
	)
}
